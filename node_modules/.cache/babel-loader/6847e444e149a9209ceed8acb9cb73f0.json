{"ast":null,"code":"import _slicedToArray from \"/home/alcantara/Documentos/Projetos/javascript/agendamentos-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/alcantara/Documentos/Projetos/javascript/agendamentos-react/src/pages/Calendar/Calendar.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interation from '@fullcalendar/interaction';\nimport Modal from 'react-bootstrap/Modal';\nimport './Calendar.css';\nimport 'react-s-alert/dist/s-alert-css-effects/stackslide.css';\nexport default function Calendar() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        show = _useState2[0],\n        setShow = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        elementDate = _useState4[0],\n        setElementDate = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        elementEvents = _useState6[0],\n        setElementEvents = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        date = _useState8[0],\n        setDate = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        name = _useState10[0],\n        setName = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        time = _useState12[0],\n        setTime = _useState12[1];\n\n  useEffect(() => {}, []);\n\n  const handleEvent = () => {\n    setShow(false);\n  };\n\n  const handleClick = ({\n    date\n  }) => {\n    const elements = {\n      day: (date.getDate() + 1) / 10 < 1 ? '0' + date.getDate() : date.getDate(),\n      month: date.getMonth() / 10 < 1 ? '0' + date.getMonth() : date.getMonth(),\n      year: date.getFullYear()\n    };\n    setDate(\"\".concat(elements.day, \"/\").concat(elements.month, \"/\").concat(elements.year));\n    setElementDate(elements);\n    setShow(true);\n  };\n\n  const handleShow = () => {\n    show ? setShow(false) : setShow(true);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"CALEND\\xC1RIO\")), React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(FullCalendar, {\n    id: \"fullcalendar\",\n    defaultView: \"dayGridMonth\",\n    plugins: [dayGridPlugin, interation],\n    weekends: true,\n    editable: true,\n    droppable: true,\n    locale: \"pt-br\",\n    dateClick: handleClick,\n    events: null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(Modal, {\n    show: show,\n    onHide: handleShow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Novo evento\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Data escolhida\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"date\",\n    value: date,\n    onChange: data => setDate(data.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Nome do evento\"), React.createElement(\"input\", {\n    type: \"email\",\n    className: \"form-control\",\n    onChange: data => setName(data.target.value),\n    id: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    id: \"datetimepicker1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Hor\\xE1rio\"), React.createElement(\"input\", {\n    type: \"time\",\n    id: \"time\",\n    className: \"form-control\",\n    onChange: data => setTime(data.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }))), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-danger\",\n    onClick: handleShow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Cancelar\"), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-success\",\n    onClick: handleEvent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Agendar\")))));\n}","map":{"version":3,"sources":["/home/alcantara/Documentos/Projetos/javascript/agendamentos-react/src/pages/Calendar/Calendar.jsx"],"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","interation","Modal","Calendar","show","setShow","elementDate","setElementDate","elementEvents","setElementEvents","date","setDate","name","setName","time","setTime","handleEvent","handleClick","elements","day","getDate","month","getMonth","year","getFullYear","handleShow","data","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport interation from '@fullcalendar/interaction';\nimport Modal from 'react-bootstrap/Modal'\n\nimport './Calendar.css';\nimport 'react-s-alert/dist/s-alert-css-effects/stackslide.css';\n\nexport default function Calendar() {\n  const [show, setShow] = useState(false);\n  const [elementDate, setElementDate] = useState([])\n  const [elementEvents, setElementEvents] = useState([])\n  const [date, setDate] = useState('');\n  const [name, setName] = useState('');\n  const [time, setTime] = useState('');\n\n  useEffect(() => {\n    \n  }, [])\n\n  const handleEvent = () => {\n    \n    setShow(false)\n  }\n\n  const handleClick = ({ date }) => {\n    const elements = {\n      day: (date.getDate() + 1) / 10 < 1 ? '0'+ (date.getDate()) : date.getDate(),\n      month: (date.getMonth()) / 10 < 1 ? '0'+ (date.getMonth()) : date.getMonth(),\n      year: date.getFullYear(),\n    }\n    setDate(`${elements.day}/${elements.month}/${elements.year}`)\n    setElementDate(elements)\n    setShow(true)\n  }\n  \n  const handleShow = () => {\n    show ? setShow(false) : setShow(true)\n  }\n\n\n  return (\n    <div className=\"row\">\n        <div className=\"col-12\">\n          <p className=\"title\">CALENDÁRIO</p>\n        </div>\n        <div className=\"col-md-12\">\n            <FullCalendar\n            id=\"fullcalendar\"\n            defaultView=\"dayGridMonth\" \n            plugins={[ dayGridPlugin, interation ]}\n            weekends={true}\n            editable={true}\n            droppable={true}\n            locale=\"pt-br\"\n            dateClick={handleClick}\n            events={null}\n          />\n\n        <Modal show={show} onHide={handleShow}>\n          <Modal.Header closeButton>\n            <Modal.Title>Novo evento</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Data escolhida</label>\n            <input type=\"text\" className=\"form-control\" id=\"date\" value={date} onChange={data => setDate(data.target.value)} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Nome do evento</label>\n            <input type=\"email\" className=\"form-control\" onChange={data => setName(data.target.value)} id=\"name\" />\n          </div>\n          <div className='form-group' id='datetimepicker1'>\n              <label htmlFor=\"date\">Horário</label>\n              <input type='time'id=\"time\" className=\"form-control\" onChange={data => setTime(data.target.value)} />\n          </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <button className=\"btn btn-danger\" onClick={handleShow}>\n              Cancelar\n            </button>\n            <button type=\"submit\" className=\"btn btn-success\"  onClick={handleEvent}>\n              Agendar\n            </button>\n          </Modal.Footer>\n        </Modal>\n\n    </div>\n  </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}